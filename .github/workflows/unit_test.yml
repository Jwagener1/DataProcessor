name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: DataProcessorSolution.sln
      UnitTest_Project_Path: DataProcessor.Tests\DataProcessor.Tests.csproj
      IntegrationTest_Project_Path: DataProcessor.IntegrationTests\DataProcessor.IntegrationTests.csproj
      Wap_Project_Directory: your-wap-project-directory    # leave as-is for packaging
      Wap_Project_Path: your-wap-project-path              # leave as-is for packaging

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # === TESTS ===
      - name: Run unit tests
        run: dotnet test ${{ env.UnitTest_Project_Path }} --configuration ${{ matrix.configuration }} --no-build --verbosity normal

      - name: Run integration tests
        run: dotnet test ${{ env.IntegrationTest_Project_Path }} --configuration ${{ matrix.configuration }} --no-build --verbosity normal

      # === REST OF YOUR PACKAGING STEPS ===

      - name: Restore the application
        run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}

      - name: Decode the pfx
        run: |
          $pfx = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
          $out = Join-Path $env:Wap_Project_Directory GitHubActionsWorkflow.pfx
          [IO.File]::WriteAllBytes($out, $pfx)

      - name: Create the app package
        run: msbuild ${{ env.Wap_Project_Path }} /p:Configuration=${{ matrix.configuration }} /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundle=Always /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}

      - name: Remove the pfx
        run: Remove-Item -Path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MSIX Package
          path: ${{ env.Wap_Project_Directory }}\AppPackages
